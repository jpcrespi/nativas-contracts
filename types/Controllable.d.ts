/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface ControllableContract
  extends Truffle.Contract<ControllableInstance> {
  "new"(
    controller_: string,
    meta?: Truffle.TransactionDetails
  ): Promise<ControllableInstance>;
}

export interface ControlTransferred {
  name: "ControlTransferred";
  args: {
    oldController: string;
    newControllerr: string;
    0: string;
    1: string;
  };
}

type AllEvents = ControlTransferred;

export interface ControllableInstance extends Truffle.ContractInstance {
  /**
   * Returns the address of the current controller.
   */
  controller(txDetails?: Truffle.TransactionDetails): Promise<string>;

  methods: {
    /**
     * Returns the address of the current controller.
     */
    controller(txDetails?: Truffle.TransactionDetails): Promise<string>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
